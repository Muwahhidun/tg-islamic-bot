from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext

from bot.services.database_service import UserService
from bot.keyboards.user import get_main_keyboard
from bot.utils.decorators import is_user_admin

from . import themes, series, lessons, search, tests

# Main router
router = Router()

# Include sub-routers
router.include_router(themes.router)
router.include_router(series.router)  # Series must come before lessons (book_ handler)
router.include_router(lessons.router)
router.include_router(search.router)
router.include_router(tests.router)


@router.message(Command("start"))
async def cmd_start(message: Message):
    """Handler for /start command with inline keyboard"""
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = await UserService.get_or_create_user(
        telegram_id=message.from_user.id,
        username=message.from_user.username,
        first_name=message.from_user.first_name,
        last_name=message.from_user.last_name
    )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    is_admin = await is_user_admin(message.from_user.id)

    welcome_text = (
        f"üïå –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!\n\n"
        "–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –∞—É–¥–∏–æ —É—Ä–æ–∫–∏ –ø–æ –∏—Å–ª–∞–º—Å–∫–∏–º –Ω–∞—É–∫–∞–º.\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã:\n"
        "üîπ –ê–∫—ã–¥–∞ - –û—Å–Ω–æ–≤—ã –≤–µ—Ä—ã\n"
        "üîπ –°–∏—Ä–∞ - –ñ–∏–∑–Ω—å –ø—Ä–æ—Ä–æ–∫–∞ Ô∑∫\n"
        "üîπ –§–∏–∫—Ö - –ò—Å–ª–∞–º—Å–∫–æ–µ –ø—Ä–∞–≤–æ\n"
        "üîπ –ê–¥–∞–± - –ò—Å–ª–∞–º—Å–∫–∏–π —ç—Ç–∏–∫–µ—Ç\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"
    )

    await message.answer(welcome_text, reply_markup=get_main_keyboard(is_admin=is_admin))


@router.message(Command("help"))
async def cmd_help(message: Message):
    """Handler for /help command with inline keyboard"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    is_admin = await is_user_admin(message.from_user.id)

    help_text = (
        "üïå <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>\n\n"
        "üìö <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/id - –£–∑–Ω–∞—Ç—å —Å–≤–æ–π Telegram ID\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
        "üìñ <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>\n"
        "1. –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–º—É\n"
        "2. –í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–∏–≥—É –∏–∑ —Å–ø–∏—Å–∫–∞\n"
        "3. –ü—Ä–æ—Å–ª—É—à–∞–π—Ç–µ —É—Ä–æ–∫–∏ –≤ –ø–æ—Ä—è–¥–∫–µ –Ω—É–º–µ—Ä–∞—Ü–∏–∏\n"
        "4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–∏—Å–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ —É—Ä–æ–∫–æ–≤ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º\n\n"
        "üîç <b>–ü–æ–∏—Å–∫:</b>\n"
        "–ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —É—Ä–æ–∫–∞, –æ–ø–∏—Å–∞–Ω–∏—é –∏ —Ç–µ–≥–∞–º\n\n"
        "üí° <b>–°–æ–≤–µ—Ç:</b>\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /id, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–π Telegram ID, "
        "–µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞."
    )

    await message.answer(help_text, reply_markup=get_main_keyboard(is_admin=is_admin))


@router.message(Command("id"))
async def cmd_id(message: Message):
    """Handler for /id command with inline keyboard"""
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    is_admin = await is_user_admin(user_id)

    info_text = (
        f"üÜî <b>–í–∞—à Telegram ID</b>\n\n"
        f"`{user_id}`\n\n"
        f"–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–æ–±—â–∏—Ç—å —ç—Ç–æ—Ç ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞."
    )

    await message.answer(info_text, reply_markup=get_main_keyboard(is_admin=is_admin))


@router.callback_query(F.data == "get_my_id")
async def callback_get_my_id(callback: CallbackQuery, state: FSMContext):
    """Handler for callback 'get_my_id' (inline button)"""
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()

    user_id = callback.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    is_admin = await is_user_admin(user_id)

    info_text = (
        f"üÜî <b>–í–∞—à Telegram ID</b>\n\n"
        f"`{user_id}`\n\n"
        f"–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–æ–±—â–∏—Ç—å —ç—Ç–æ—Ç ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞."
    )

    await callback.message.edit_text(info_text, reply_markup=get_main_keyboard(is_admin=is_admin))
    await callback.answer()


@router.callback_query(F.data == "main_menu")
async def callback_main_menu(callback: CallbackQuery, state: FSMContext):
    """Handler for callback 'main_menu' (returns to main menu)"""
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    is_admin = await is_user_admin(callback.from_user.id)

    welcome_text = (
        "üïå <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )

    await callback.message.edit_text(welcome_text, reply_markup=get_main_keyboard(is_admin=is_admin))
    await callback.answer()


@router.callback_query(F.data == "about_project")
async def callback_about_project(callback: CallbackQuery, state: FSMContext):
    """Handler for callback 'about_project' (shows info about the project)"""
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    is_admin = await is_user_admin(callback.from_user.id)

    about_text = (
        "ÿ®Ÿêÿ≥ŸíŸÖŸê ÿßŸÑŸÑŸéŸëŸáŸê ÿßŸÑÿ±ŸéŸëÿ≠ŸíŸÖŸéŸÄŸ∞ŸÜŸê ÿßŸÑÿ±ŸéŸëÿ≠ŸêŸäŸÖŸê\n\n"
        "üîä <b>Muwahhid_bot ‚Äî –∞—É–¥–∏–æ-–±–æ—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏—Å–ª–∞–º—Å–∫–∏—Ö –Ω–∞—É–∫</b>\n\n"
        "–ë–æ—Ç —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∏–∑—É—á–µ–Ω–∏–µ –∏—Å–ª–∞–º—Å–∫–∏—Ö –Ω–∞—É–∫ —É–¥–æ–±–Ω—ã–º –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º.\n"
        "–û–Ω –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º —Å–æ–±–∏—Ä–∞—Ç—å –∏ —Å–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –∞—É–¥–∏–æ—É—Ä–æ–∫–∏,\n"
        "–∞ –æ–±—É—á–∞—é—â–∏–º—Å—è ‚Äî –ª–µ–≥–∫–æ –Ω–∞—Ö–æ–¥–∏—Ç—å, —Å–ª—É—à–∞—Ç—å –∏ –∏–∑—É—á–∞—Ç—å –∏—Ö –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.\n\n"
        "üìö <b>–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–∏ –Ω–µ —Ç–æ–ª—å–∫–æ):</b>\n"
        "‚Ä¢ –ê–∫—ã–¥–∞ ‚Äî –æ—Å–Ω–æ–≤—ã –≤–µ—Ä—ã –∏ –µ–¥–∏–Ω–æ–±–æ–∂–∏—è\n"
        "‚Ä¢ –°–∏—Ä–∞ ‚Äî –∂–∏–∑–Ω—å –ø—Ä–æ—Ä–æ–∫–∞ –ú—É—Ö–∞–º–º–∞–¥–∞ Ô∑∫\n"
        "‚Ä¢ –§–∏–∫—Ö ‚Äî –∏—Å–ª–∞–º—Å–∫–æ–µ –ø—Ä–∞–≤–æ –∏ –ø–æ–∫–ª–æ–Ω–µ–Ω–∏–µ\n"
        "‚Ä¢ –ê–¥–∞–± ‚Äî –∏—Å–ª–∞–º—Å–∫–∏–π —ç—Ç–∏–∫–µ—Ç –∏ –Ω—Ä–∞–≤—ã\n"
        "(—Å–ø–∏—Å–æ–∫ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –±—É–¥–µ—Ç –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å—Å—è)\n\n"
        "üéß <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
        "‚Ä¢ –ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ—É—Ä–æ–∫–æ–≤ –æ–Ω–ª–∞–π–Ω\n"
        "‚Ä¢ –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–º–∞–º, –ª–µ–∫—Ç–æ—Ä–∞–º –∏ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º\n"
        "‚Ä¢ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ñ–ª–∞–π–Ω-–ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è\n"
        "‚Ä¢ –ó–∞–∫–ª–∞–¥–∫–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω—É–∂–Ω—ã—Ö —É—Ä–æ–∫–æ–≤\n"
        "‚Ä¢ –¢–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–≤–æ–µ–Ω–Ω—ã—Ö –∑–Ω–∞–Ω–∏–π\n\n"
        "‚ùó –î–ª—è –∑–∞–º–µ—á–∞–Ω–∏–π, –ø–æ–∂–µ–ª–∞–Ω–∏–π, –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ —Å –∞–≤—Ç–æ—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–∞.\n\n"
        "–ü—É—Å—Ç—å –ê–ª–ª–∞—Ö –ø—Ä–∏–º–µ—Ç —ç—Ç–æ—Ç —Ç—Ä—É–¥, —Å–¥–µ–ª–∞–µ—Ç –µ–≥–æ –ø–æ–ª–µ–∑–Ω—ã–º –¥–ª—è —É–º–º—ã\n"
        "–∏ –ø—Ä–∏—á–∏–Ω–æ–π —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª–µ–∑–Ω—ã—Ö –∑–Ω–∞–Ω–∏–π!"
    )

    await callback.message.edit_text(about_text, reply_markup=get_main_keyboard(is_admin=is_admin))
    await callback.answer()
