from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import CallbackQuery, Message

from bot.services.database_service import UserService
from bot.keyboards.user import get_main_keyboard

from . import themes, lessons, search

# Main router
router = Router()

# Include sub-routers
router.include_router(themes.router)
router.include_router(lessons.router)
router.include_router(search.router)


@router.message(Command("start"))
async def cmd_start(message: Message):
    """Handler for /start command with inline keyboard"""
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = await UserService.get_or_create_user(
        telegram_id=message.from_user.id,
        username=message.from_user.username,
        first_name=message.from_user.first_name,
        last_name=message.from_user.last_name
    )

    welcome_text = (
        f"üïå –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!\n\n"
        "–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –∞—É–¥–∏–æ —É—Ä–æ–∫–∏ –ø–æ –∏—Å–ª–∞–º—Å–∫–∏–º –Ω–∞—É–∫–∞–º.\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã:\n"
        "üîπ –ê–∫—ã–¥–∞ - –û—Å–Ω–æ–≤—ã –≤–µ—Ä—ã\n"
        "üîπ –°–∏—Ä–∞ - –ñ–∏–∑–Ω—å –ø—Ä–æ—Ä–æ–∫–∞ Ô∑∫\n"
        "üîπ –§–∏–∫—Ö - –ò—Å–ª–∞–º—Å–∫–æ–µ –ø—Ä–∞–≤–æ\n"
        "üîπ –ê–¥–∞–± - –ò—Å–ª–∞–º—Å–∫–∏–π —ç—Ç–∏–∫–µ—Ç\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"
    )

    await message.answer(welcome_text, reply_markup=get_main_keyboard())


@router.message(Command("help"))
async def cmd_help(message: Message):
    """Handler for /help command with inline keyboard"""
    help_text = (
        "üïå <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>\n\n"
        "üìö <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/id - –£–∑–Ω–∞—Ç—å —Å–≤–æ–π Telegram ID\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
        "üìñ <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>\n"
        "1. –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–º—É\n"
        "2. –í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–∏–≥—É –∏–∑ —Å–ø–∏—Å–∫–∞\n"
        "3. –ü—Ä–æ—Å–ª—É—à–∞–π—Ç–µ —É—Ä–æ–∫–∏ –≤ –ø–æ—Ä—è–¥–∫–µ –Ω—É–º–µ—Ä–∞—Ü–∏–∏\n"
        "4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–∏—Å–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ —É—Ä–æ–∫–æ–≤ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º\n\n"
        "üîç <b>–ü–æ–∏—Å–∫:</b>\n"
        "–ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —É—Ä–æ–∫–∞, –æ–ø–∏—Å–∞–Ω–∏—é –∏ —Ç–µ–≥–∞–º\n\n"
        "üí° <b>–°–æ–≤–µ—Ç:</b>\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /id, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–π Telegram ID, "
        "–µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞."
    )

    await message.answer(help_text, reply_markup=get_main_keyboard())


@router.message(Command("id"))
async def cmd_id(message: Message):
    """Handler for /id command with inline keyboard"""
    user_id = message.from_user.id

    info_text = (
        f"üÜî <b>–í–∞—à Telegram ID</b>\n\n"
        f"`{user_id}`\n\n"
        f"–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–æ–±—â–∏—Ç—å —ç—Ç–æ—Ç ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞."
    )

    await message.answer(info_text, reply_markup=get_main_keyboard())


@router.callback_query(F.data == "get_my_id")
async def callback_get_my_id(callback: CallbackQuery):
    """Handler for callback 'get_my_id' (inline button)"""
    user_id = callback.from_user.id

    info_text = (
        f"üÜî <b>–í–∞—à Telegram ID</b>\n\n"
        f"`{user_id}`\n\n"
        f"–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–æ–±—â–∏—Ç—å —ç—Ç–æ—Ç ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞."
    )

    await callback.message.edit_text(info_text, reply_markup=get_main_keyboard())
    await callback.answer()


@router.callback_query(F.data == "main_menu")
async def callback_main_menu(callback: CallbackQuery):
    """Handler for callback 'main_menu' (returns to main menu)"""
    welcome_text = (
        "üïå <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )

    await callback.message.edit_text(welcome_text, reply_markup=get_main_keyboard())
    await callback.answer()


@router.callback_query(F.data == "about_project")
async def callback_about_project(callback: CallbackQuery):
    """Handler for callback 'about_project' (shows info about the project)"""
    about_text = (
        "üïå <b>–û–± –∞—É–¥–∏–æ –±–æ—Ç–µ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏—Å–ª–∞–º—Å–∫–∏—Ö –Ω–∞—É–∫</b>\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞—É–¥–∏–æ —É—Ä–æ–∫–∞–º –ø–æ –∏—Å–ª–∞–º—Å–∫–∏–º –Ω–∞—É–∫–∞–º.\n\n"
        "üìö <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b>\n"
        "‚Ä¢ –ê–∫—ã–¥–∞ - –û—Å–Ω–æ–≤—ã –≤–µ—Ä—ã –∏ –µ–¥–∏–Ω–æ–±–æ–∂–∏—è\n"
        "‚Ä¢ –°–∏—Ä–∞ - –ñ–∏–∑–Ω—å –ø—Ä–æ—Ä–æ–∫–∞ –ú—É—Ö–∞–º–º–∞–¥–∞ Ô∑∫\n"
        "‚Ä¢ –§–∏–∫—Ö - –ò—Å–ª–∞–º—Å–∫–æ–µ –ø—Ä–∞–≤–æ –∏ –ø–æ–∫–ª–æ–Ω–µ–Ω–∏–µ\n"
        "‚Ä¢ –ê–¥–∞–± - –ò—Å–ª–∞–º—Å–∫–∏–π —ç—Ç–∏–∫–µ—Ç –∏ –Ω—Ä–∞–≤—ã\n\n"
        "üéß <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
        "‚Ä¢ –ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ —É—Ä–æ–∫–æ–≤\n"
        "‚Ä¢ –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º\n"
        "‚Ä¢ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –¥–ª—è –æ—Ñ–ª–∞–π–Ω-–ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è\n\n"
        "ü§≤ <i>–ü—É—Å—Ç—å Allah –ø—Ä–∏–º–µ—Ç —ç—Ç–æ—Ç —Ç—Ä—É–¥ –∏ —Å–¥–µ–ª–∞–µ—Ç –µ–≥–æ –ø–æ–ª–µ–∑–Ω—ã–º –¥–ª—è —É–º–º—ã!</i>"
    )

    await callback.message.edit_text(about_text, reply_markup=get_main_keyboard())
    await callback.answer()
