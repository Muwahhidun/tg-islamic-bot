"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏
"""
import logging

from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import CallbackQuery, Message, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from bot.utils.decorators import admin_required
from bot.services.database_service import (
    get_all_lesson_teachers,
    get_lesson_teacher_by_id,
    get_lesson_teacher_by_name,
    create_lesson_teacher,
    update_lesson_teacher,
    delete_lesson_teacher,
    get_all_lessons,
    get_all_books,
    regenerate_teacher_lessons_titles,
)

logger = logging.getLogger(__name__)

router = Router()


class LessonTeacherStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏"""
    name = State()
    biography = State()
    edit_series_year = State()
    edit_series_name = State()


@router.callback_query(F.data == "admin_teachers")
@admin_required
async def admin_teachers(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    teachers = await get_all_lesson_teachers()

    builder = InlineKeyboardBuilder()
    for teacher in teachers:
        status = "‚úÖ" if teacher.is_active else "‚ùå"
        builder.add(InlineKeyboardButton(
            text=f"{status} {teacher.name}",
            callback_data=f"edit_teacher_{teacher.id}"
        ))

    builder.add(InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", callback_data="add_teacher"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_panel"))
    builder.adjust(1)

    await callback.message.edit_text(
        "üë§ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ–≥–æ:",
        reply_markup=builder.as_markup()
    )
    await callback.answer()


@router.callback_query(F.data == "add_teacher")
@admin_required
async def add_teacher_start(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"""
    await state.update_data(
        create_message_id=callback.message.message_id,
        create_chat_id=callback.message.chat.id
    )
    await callback.message.edit_text(
        "üìù <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data="admin_teachers")]])
    )
    await state.set_state(LessonTeacherStates.name)
    await callback.answer()


@router.callback_query(F.data.regexp(r"^edit_teacher_\d+$"))
@admin_required
async def edit_teacher_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"""
    teacher_id = int(callback.data.split("_")[2])
    teacher = await get_lesson_teacher_by_id(teacher_id)

    if not teacher:
        await callback.answer("‚ùå –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    status = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if teacher.is_active else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"

    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", callback_data=f"edit_teacher_name_{teacher.id}"))
    builder.add(InlineKeyboardButton(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é", callback_data=f"edit_teacher_bio_{teacher.id}"))
    builder.add(InlineKeyboardButton(text=f"üîÑ –°—Ç–∞—Ç—É—Å: {status}", callback_data=f"toggle_teacher_{teacher.id}"))
    builder.add(InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", callback_data=f"delete_teacher_{teacher.id}"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_teachers"))
    builder.adjust(1)

    await callback.message.edit_text(
        f"üë§ <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</b>\n\n"
        f"–ò–º—è: {teacher.name}\n"
        f"–ë–∏–æ–≥—Ä–∞—Ñ–∏—è: {teacher.biography or '–ù–µ—Ç –±–∏–æ–≥—Ä–∞—Ñ–∏–∏'}\n"
        f"–°—Ç–∞—Ç—É—Å: {status}",
        reply_markup=builder.as_markup()
    )
    await callback.answer()


@router.callback_query(F.data.startswith("toggle_teacher_"))
@admin_required
async def toggle_teacher(callback: CallbackQuery):
    """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"""
    teacher_id = int(callback.data.split("_")[2])
    teacher = await get_lesson_teacher_by_id(teacher_id)

    if not teacher:
        await callback.answer("‚ùå –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    teacher.is_active = not teacher.is_active
    await update_lesson_teacher(teacher)

    status = "–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω" if teacher.is_active else "–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
    await callback.answer(f"‚úÖ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å {status}")

    # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–Ω–æ–≤–æ
    teacher = await get_lesson_teacher_by_id(teacher_id)
    status_text = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if teacher.is_active else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"

    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", callback_data=f"edit_teacher_name_{teacher.id}"))
    builder.add(InlineKeyboardButton(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é", callback_data=f"edit_teacher_bio_{teacher.id}"))
    builder.add(InlineKeyboardButton(text=f"üîÑ –°—Ç–∞—Ç—É—Å: {status_text}", callback_data=f"toggle_teacher_{teacher.id}"))
    builder.add(InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", callback_data=f"delete_teacher_{teacher.id}"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_teachers"))
    builder.adjust(1)

    await callback.message.edit_text(
        f"üë§ <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</b>\n\n"
        f"–ò–º—è: {teacher.name}\n"
        f"–ë–∏–æ–≥—Ä–∞—Ñ–∏—è: {teacher.biography or '–ù–µ—Ç –±–∏–æ–≥—Ä–∞—Ñ–∏–∏'}\n"
        f"–°—Ç–∞—Ç—É—Å: {status_text}",
        reply_markup=builder.as_markup()
    )


@router.callback_query(F.data.startswith("delete_teacher_"))
@admin_required
async def delete_teacher_prompt(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"""
    teacher_id = int(callback.data.split("_")[2])
    teacher = await get_lesson_teacher_by_id(teacher_id)

    if not teacher:
        await callback.answer("‚ùå –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return

    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–∫–æ–≤
    from bot.services.database_service import get_all_lessons
    lessons = await get_all_lessons()
    lessons_count = len([l for l in lessons if l.teacher_id == teacher_id])

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    warning_text = f"‚ö†Ô∏è <b>–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</b>\n\n"
    warning_text += f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è ¬´{teacher.name}¬ª?\n\n"

    if lessons_count > 0:
        warning_text += f"‚ÑπÔ∏è <b>–£ —ç—Ç–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å {lessons_count} —É—Ä–æ–∫(–æ–≤)</b>\n"
        warning_text += "–£—Ä–æ–∫–∏ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ, –Ω–æ –±—É–¥—É—Ç –æ—Ç–≤—è–∑–∞–Ω—ã –æ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.\n\n"

    warning_text += "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!"

    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"confirm_delete_teacher_{teacher_id}"))
    builder.add(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"edit_teacher_{teacher_id}"))
    builder.adjust(1)

    await callback.message.edit_text(warning_text, reply_markup=builder.as_markup())
    await callback.answer()


@router.callback_query(F.data.startswith("confirm_delete_teacher_"))
@admin_required
async def confirm_delete_teacher(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"""
    teacher_id = int(callback.data.split("_")[3])
    teacher = await get_lesson_teacher_by_id(teacher_id)

    if not teacher:
        await callback.answer("‚ùå –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return

    teacher_name = teacher.name
    await delete_lesson_teacher(teacher_id)

    await callback.message.edit_text(
        f"‚úÖ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å ¬´{teacher_name}¬ª —É–¥–∞–ª–µ–Ω",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
            InlineKeyboardButton(text="üîô –ö —Å–ø–∏—Å–∫—É –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data="admin_teachers")
        ]])
    )
    await callback.answer()


@router.callback_query(F.data.startswith("edit_teacher_name_"))
@admin_required
async def edit_teacher_name_start(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"""
    teacher_id = int(callback.data.split("_")[3])
    teacher = await get_lesson_teacher_by_id(teacher_id)

    if not teacher:
        await callback.answer("‚ùå –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(
        teacher_id=teacher_id,
        edit_message_id=callback.message.message_id,
        edit_chat_id=callback.message.chat.id
    )

    await callback.message.edit_text(
        f"üìù <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</b>\n\n"
        f"–¢–µ–∫—É—â–µ–µ –∏–º—è: {teacher.name}\n\n"
        f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
            InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data=f"edit_teacher_{teacher_id}")
        ]])
    )
    await state.set_state(LessonTeacherStates.name)
    await callback.answer()


@router.message(LessonTeacherStates.name)
@admin_required
async def edit_teacher_name_save(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤–æ–µ –∏–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"""
    data = await state.get_data()
    teacher_id = data.get("teacher_id")
    new_name = message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–º–µ–Ω–∏
    existing_teacher = await get_lesson_teacher_by_name(new_name)
    if existing_teacher and (not teacher_id or existing_teacher.id != teacher_id):
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            await message.delete()
        except:
            pass

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–∫–Ω–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
        if teacher_id:
            # –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            chat_id = data.get("edit_chat_id")
            message_id = data.get("edit_message_id")
            cancel_callback = f"edit_teacher_{teacher_id}"
        else:
            # –†–µ–∂–∏–º —Å–æ–∑–¥–∞–Ω–∏—è
            chat_id = data.get("create_chat_id")
            message_id = data.get("create_message_id")
            cancel_callback = "admin_teachers"

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ –æ–∫–Ω–æ —Å –æ—à–∏–±–∫–æ–π
        if chat_id and message_id:
            await message.bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text=f"‚ùå <b>–û—à–∏–±–∫–∞!</b>\n\n–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —Å –∏–º–µ–Ω–µ–º ¬´{new_name}¬ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!\n\n–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∏–º—è:",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                    InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data=cancel_callback)
                ]])
            )
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ
    if teacher_id:
        # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
        teacher = await get_lesson_teacher_by_id(teacher_id)
        if teacher:
            old_name = teacher.name
            teacher.name = new_name
            await update_lesson_teacher(teacher)

            # –†–µ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–∞–π—Ç–ª—ã –≤—Å–µ—Ö —É—Ä–æ–∫–æ–≤ —ç—Ç–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
            if old_name != new_name:
                updated_lessons = await regenerate_teacher_lessons_titles(teacher_id)
                if updated_lessons > 0:
                    logger.info(f"–†–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–π —É—Ä–æ–∫–æ–≤: {updated_lessons} (–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å {teacher_id})")

            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                await message.delete()
            except:
                pass

            # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ state
            edit_message_id = data.get("edit_message_id")
            edit_chat_id = data.get("edit_chat_id")

            # –û—á–∏—â–∞–µ–º state
            await state.clear()

            # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö
            teacher = await get_lesson_teacher_by_id(teacher_id)

            # –§–æ—Ä–º–∏—Ä—É–µ–º –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–∫–∞–∫ –≤ edit_teacher_menu)
            status = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if teacher.is_active else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"

            builder = InlineKeyboardBuilder()
            builder.add(InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", callback_data=f"edit_teacher_name_{teacher.id}"))
            builder.add(InlineKeyboardButton(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é", callback_data=f"edit_teacher_bio_{teacher.id}"))
            builder.add(InlineKeyboardButton(text=f"üîÑ –°—Ç–∞—Ç—É—Å: {status}", callback_data=f"toggle_teacher_{teacher.id}"))
            builder.add(InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", callback_data=f"delete_teacher_{teacher.id}"))
            builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_teachers"))
            builder.adjust(1)

            info = (
                f"üë§ <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</b>\n\n"
                f"–ò–º—è: {teacher.name}\n"
                f"–ë–∏–æ–≥—Ä–∞—Ñ–∏—è: {teacher.biography or '–ù–µ—Ç –±–∏–æ–≥—Ä–∞—Ñ–∏–∏'}\n"
                f"–°—Ç–∞—Ç—É—Å: {status}"
            )

            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if edit_message_id and edit_chat_id:
                try:
                    await message.bot.edit_message_text(
                        chat_id=edit_chat_id,
                        message_id=edit_message_id,
                        text=info,
                        reply_markup=builder.as_markup()
                    )
                except Exception as e:
                    # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
                    await message.answer(info, reply_markup=builder.as_markup())
        else:
            await message.answer("‚ùå –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            await state.clear()
    else:
        # –≠—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.delete()

        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ state
        create_message_id = data.get("create_message_id")
        create_chat_id = data.get("create_chat_id")

        await state.update_data(name=new_name)

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if create_message_id and create_chat_id:
            try:
                await message.bot.edit_message_text(
                    chat_id=create_chat_id,
                    message_id=create_message_id,
                    text="üìù <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</b>\n\n"
                         "–í–≤–µ–¥–∏—Ç–µ –±–∏–æ–≥—Ä–∞—Ñ–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:",
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                        [InlineKeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_teacher_biography")],
                        [InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data="admin_teachers")]
                    ])
                )
            except:
                await message.answer(
                    "üìù <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</b>\n\n"
                    "–í–≤–µ–¥–∏—Ç–µ –±–∏–æ–≥—Ä–∞—Ñ–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:",
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                        [InlineKeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_teacher_biography")],
                        [InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data="admin_teachers")]
                    ])
                )
        await state.set_state(LessonTeacherStates.biography)


@router.callback_query(F.data.startswith("edit_teacher_bio_"))
@admin_required
async def edit_teacher_bio_start(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"""
    teacher_id = int(callback.data.split("_")[3])
    teacher = await get_lesson_teacher_by_id(teacher_id)

    if not teacher:
        await callback.answer("‚ùå –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(
        teacher_id=teacher_id,
        edit_message_id=callback.message.message_id,
        edit_chat_id=callback.message.chat.id
    )

    await callback.message.edit_text(
        f"üìù <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</b>\n\n"
        f"–¢–µ–∫—É—â–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è: {teacher.biography or '–ù–µ—Ç –±–∏–æ–≥—Ä–∞—Ñ–∏–∏'}\n\n"
        f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –±–∏–æ–≥—Ä–∞—Ñ–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é", callback_data="skip_teacher_biography")],
            [InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data=f"edit_teacher_{teacher_id}")]
        ])
    )
    await state.set_state(LessonTeacherStates.biography)
    await callback.answer()


@router.callback_query(F.data == "skip_teacher_biography")
@admin_required
async def skip_teacher_biography(callback: CallbackQuery, state: FSMContext):
    """–£–¥–∞–ª–∏—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏"""
    data = await state.get_data()
    teacher_id = data.get("teacher_id")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ
    if teacher_id:
        # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - —É–¥–∞–ª—è–µ–º –±–∏–æ–≥—Ä–∞—Ñ–∏—é
        teacher = await get_lesson_teacher_by_id(teacher_id)
        if teacher:
            teacher.biography = ""
            await update_lesson_teacher(teacher)

            await state.clear()
            await callback.answer("‚úÖ –ë–∏–æ–≥—Ä–∞—Ñ–∏—è —É–¥–∞–ª–µ–Ω–∞")

            # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö
            teacher = await get_lesson_teacher_by_id(teacher_id)

            # –§–æ—Ä–º–∏—Ä—É–µ–º –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–∫–∞–∫ –≤ edit_teacher_menu)
            status = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if teacher.is_active else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"

            builder = InlineKeyboardBuilder()
            builder.add(InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", callback_data=f"edit_teacher_name_{teacher.id}"))
            builder.add(InlineKeyboardButton(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é", callback_data=f"edit_teacher_bio_{teacher.id}"))
            builder.add(InlineKeyboardButton(text=f"üîÑ –°—Ç–∞—Ç—É—Å: {status}", callback_data=f"toggle_teacher_{teacher.id}"))
            builder.add(InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", callback_data=f"delete_teacher_{teacher.id}"))
            builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_teachers"))
            builder.adjust(1)

            await callback.message.edit_text(
                f"üë§ <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</b>\n\n"
                f"–ò–º—è: {teacher.name}\n"
                f"–ë–∏–æ–≥—Ä–∞—Ñ–∏—è: {teacher.biography or '–ù–µ—Ç –±–∏–æ–≥—Ä–∞—Ñ–∏–∏'}\n"
                f"–°—Ç–∞—Ç—É—Å: {status}",
                reply_markup=builder.as_markup()
            )
        else:
            await callback.answer("‚ùå –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
            await state.clear()
    else:
        # –≠—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
        name = data.get("name")

        # –°–æ–∑–¥–∞—ë–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
        teacher = await create_lesson_teacher(
            name=name,
            biography="",
            is_active=True
        )

        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ state
        create_message_id = data.get("create_message_id")
        create_chat_id = data.get("create_chat_id")

        # –û—á–∏—â–∞–µ–º state
        await state.clear()

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
        teachers = await get_all_lesson_teachers()

        # –°—Ç—Ä–æ–∏–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ (–∫–∞–∫ –≤ admin_teachers)
        builder = InlineKeyboardBuilder()
        for teacher_item in teachers:
            status = "‚úÖ" if teacher_item.is_active else "‚ùå"
            builder.add(InlineKeyboardButton(
                text=f"{status} {teacher_item.name}",
                callback_data=f"edit_teacher_{teacher_item.id}"
            ))

        builder.add(InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", callback_data="add_teacher"))
        builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_panel"))
        builder.adjust(1)

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if create_message_id and create_chat_id:
            try:
                await callback.bot.edit_message_text(
                    chat_id=create_chat_id,
                    message_id=create_message_id,
                    text="üë§ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏</b>\n\n"
                         "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ–≥–æ:",
                    reply_markup=builder.as_markup()
                )
            except:
                await callback.message.edit_text(
                    "üë§ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏</b>\n\n"
                    "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ–≥–æ:",
                    reply_markup=builder.as_markup()
                )
    await callback.answer()


@router.message(LessonTeacherStates.biography)
@admin_required
async def edit_teacher_bio_save(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤—É—é –±–∏–æ–≥—Ä–∞—Ñ–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"""
    data = await state.get_data()
    teacher_id = data.get("teacher_id")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ
    if teacher_id:
        # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
        teacher = await get_lesson_teacher_by_id(teacher_id)
        if teacher:
            teacher.biography = message.text
            await update_lesson_teacher(teacher)

            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                await message.delete()
            except:
                pass

            # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ state
            edit_message_id = data.get("edit_message_id")
            edit_chat_id = data.get("edit_chat_id")

            # –û—á–∏—â–∞–µ–º state
            await state.clear()

            # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö
            teacher = await get_lesson_teacher_by_id(teacher_id)

            # –§–æ—Ä–º–∏—Ä—É–µ–º –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–∫–∞–∫ –≤ edit_teacher_menu)
            status = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if teacher.is_active else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"

            builder = InlineKeyboardBuilder()
            builder.add(InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", callback_data=f"edit_teacher_name_{teacher.id}"))
            builder.add(InlineKeyboardButton(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é", callback_data=f"edit_teacher_bio_{teacher.id}"))
            builder.add(InlineKeyboardButton(text=f"üîÑ –°—Ç–∞—Ç—É—Å: {status}", callback_data=f"toggle_teacher_{teacher.id}"))
            builder.add(InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", callback_data=f"delete_teacher_{teacher.id}"))
            builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_teachers"))
            builder.adjust(1)

            info = (
                f"üë§ <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</b>\n\n"
                f"–ò–º—è: {teacher.name}\n"
                f"–ë–∏–æ–≥—Ä–∞—Ñ–∏—è: {teacher.biography or '–ù–µ—Ç –±–∏–æ–≥—Ä–∞—Ñ–∏–∏'}\n"
                f"–°—Ç–∞—Ç—É—Å: {status}"
            )

            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if edit_message_id and edit_chat_id:
                try:
                    await message.bot.edit_message_text(
                        chat_id=edit_chat_id,
                        message_id=edit_message_id,
                        text=info,
                        reply_markup=builder.as_markup()
                    )
                except Exception as e:
                    # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
                    await message.answer(info, reply_markup=builder.as_markup())
        else:
            await message.answer("‚ùå –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            await state.clear()
    else:
        # –≠—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
        name = data.get("name")

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.delete()

        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ state
        create_message_id = data.get("create_message_id")
        create_chat_id = data.get("create_chat_id")

        # –°–æ–∑–¥–∞—ë–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
        teacher = await create_lesson_teacher(
            name=name,
            biography=message.text,
            is_active=True
        )

        # –û—á–∏—â–∞–µ–º state
        await state.clear()

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
        teachers = await get_all_lesson_teachers()

        # –°—Ç—Ä–æ–∏–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ (–∫–∞–∫ –≤ admin_teachers)
        builder = InlineKeyboardBuilder()
        for teacher_item in teachers:
            status = "‚úÖ" if teacher_item.is_active else "‚ùå"
            builder.add(InlineKeyboardButton(
                text=f"{status} {teacher_item.name}",
                callback_data=f"edit_teacher_{teacher_item.id}"
            ))

        builder.add(InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", callback_data="add_teacher"))
        builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_panel"))
        builder.adjust(1)

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if create_message_id and create_chat_id:
            try:
                await message.bot.edit_message_text(
                    chat_id=create_chat_id,
                    message_id=create_message_id,
                    text="üë§ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏</b>\n\n"
                         "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ–≥–æ:",
                    reply_markup=builder.as_markup()
                )
            except:
                await message.answer(
                    "üë§ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏</b>\n\n"
                    "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ–≥–æ:",
                    reply_markup=builder.as_markup()
                )
