"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–∞–º–∏
"""
from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import CallbackQuery, Message, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from bot.utils.decorators import admin_required
from bot.services.database_service import (
    get_all_themes,
    get_theme_by_id,
    get_theme_by_name,
    create_theme,
    update_theme,
    delete_theme,
)

router = Router()


class ThemeStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–º–∞–º–∏"""
    name = State()
    description = State()


@router.callback_query(F.data == "admin_themes")
@admin_required
async def admin_themes(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ–º –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    themes = await get_all_themes()

    builder = InlineKeyboardBuilder()
    for theme in themes:
        status = "‚úÖ" if theme.is_active else "‚ùå"
        builder.add(InlineKeyboardButton(
            text=f"{status} {theme.name}",
            callback_data=f"edit_theme_{theme.id}"
        ))

    builder.add(InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–º—É", callback_data="add_theme"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_panel"))
    builder.adjust(1)

    await callback.message.edit_text(
        "üìö <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–∞–º–∏</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é:",
        reply_markup=builder.as_markup()
    )
    await callback.answer()


@router.callback_query(F.data == "add_theme")
@admin_required
async def add_theme_start(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–µ–º—ã"""
    await state.update_data(
        create_message_id=callback.message.message_id,
        create_chat_id=callback.message.chat.id
    )
    await callback.message.edit_text(
        "üìù <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–µ–º—ã</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data="admin_themes")]])
    )
    await state.set_state(ThemeStates.name)
    await callback.answer()


@router.callback_query(F.data.regexp(r"^edit_theme_\d+$"))
@admin_required
async def edit_theme_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–º—ã"""
    theme_id = int(callback.data.split("_")[2])
    theme = await get_theme_by_id(theme_id)

    if not theme:
        await callback.answer("‚ùå –¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return

    status = "‚úÖ –ê–∫—Ç–∏–≤–Ω–∞" if theme.is_active else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"

    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit_theme_name_{theme.id}"))
    builder.add(InlineKeyboardButton(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"edit_theme_desc_{theme.id}"))
    builder.add(InlineKeyboardButton(text=f"üîÑ –°—Ç–∞—Ç—É—Å: {status}", callback_data=f"toggle_theme_{theme.id}"))
    builder.add(InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_theme_{theme.id}"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_themes"))
    builder.adjust(2)

    await callback.message.edit_text(
        f"üìö <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–º—ã</b>\n\n"
        f"–ù–∞–∑–≤–∞–Ω–∏–µ: {theme.name}\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ: {theme.desc or '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}\n"
        f"–°—Ç–∞—Ç—É—Å: {status}",
        reply_markup=builder.as_markup()
    )
    await callback.answer()


@router.callback_query(F.data.startswith("toggle_theme_"))
@admin_required
async def toggle_theme(callback: CallbackQuery):
    """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ–º—ã"""
    theme_id = int(callback.data.split("_")[2])
    theme = await get_theme_by_id(theme_id)

    if not theme:
        await callback.answer("‚ùå –¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return

    theme.is_active = not theme.is_active
    await update_theme(theme)

    status = "–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞" if theme.is_active else "–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞"
    await callback.answer(f"‚úÖ –¢–µ–º–∞ {status}")

    # Rebuild menu with updated status
    status_text = "‚úÖ –ê–∫—Ç–∏–≤–Ω–∞" if theme.is_active else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"

    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit_theme_name_{theme.id}"))
    builder.add(InlineKeyboardButton(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"edit_theme_desc_{theme.id}"))
    builder.add(InlineKeyboardButton(text=f"üîÑ –°—Ç–∞—Ç—É—Å: {status_text}", callback_data=f"toggle_theme_{theme.id}"))
    builder.add(InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_theme_{theme.id}"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_themes"))
    builder.adjust(2)

    await callback.message.edit_text(
        f"üìö <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–º—ã</b>\n\n"
        f"–ù–∞–∑–≤–∞–Ω–∏–µ: {theme.name}\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ: {theme.desc or '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}\n"
        f"–°—Ç–∞—Ç—É—Å: {status_text}",
        reply_markup=builder.as_markup()
    )


@router.callback_query(F.data.startswith("edit_theme_name_"))
@admin_required
async def edit_theme_name_start(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–µ–º—ã"""
    theme_id = int(callback.data.split("_")[3])
    theme = await get_theme_by_id(theme_id)

    if not theme:
        await callback.answer("‚ùå –¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return

    await state.update_data(
        theme_id=theme_id,
        edit_message_id=callback.message.message_id,
        edit_chat_id=callback.message.chat.id
    )

    await callback.message.edit_text(
        f"üìù <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–µ–º—ã</b>\n\n"
        f"–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {theme.name}\n\n"
        f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
            InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data=f"edit_theme_{theme_id}")
        ]])
    )
    await state.set_state(ThemeStates.name)
    await callback.answer()


@router.message(ThemeStates.name)
@admin_required
async def edit_theme_name_save(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã"""
    data = await state.get_data()
    theme_id = data.get("theme_id")
    new_name = message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–º–µ–Ω–∏
    existing_theme = await get_theme_by_name(new_name)
    if existing_theme and (not theme_id or existing_theme.id != theme_id):
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            await message.delete()
        except:
            pass

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–∫–Ω–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
        if theme_id:
            # –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            chat_id = data.get("edit_chat_id")
            message_id = data.get("edit_message_id")
            cancel_callback = f"edit_theme_{theme_id}"
        else:
            # –†–µ–∂–∏–º —Å–æ–∑–¥–∞–Ω–∏—è
            chat_id = data.get("create_chat_id")
            message_id = data.get("create_message_id")
            cancel_callback = "admin_themes"

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ –æ–∫–Ω–æ —Å –æ—à–∏–±–∫–æ–π
        if chat_id and message_id:
            await message.bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text=f"‚ùå <b>–û—à–∏–±–∫–∞!</b>\n\n–¢–µ–º–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º ¬´{new_name}¬ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!\n\n–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                    InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data=cancel_callback)
                ]])
            )
        return

    if theme_id:
        # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ç–µ–º—ã
        theme = await get_theme_by_id(theme_id)
        if theme:
            theme.name = new_name
            await update_theme(theme)

            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                await message.delete()
            except:
                pass

            # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ state
            edit_message_id = data.get("edit_message_id")
            edit_chat_id = data.get("edit_chat_id")

            # –û—á–∏—â–∞–µ–º state
            await state.clear()

            # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–º—É –∏–∑ –ë–î –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö
            theme = await get_theme_by_id(theme_id)

            # –§–æ—Ä–º–∏—Ä—É–µ–º –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–∫–∞–∫ –≤ edit_theme_menu)
            status = "‚úÖ –ê–∫—Ç–∏–≤–Ω–∞" if theme.is_active else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"

            builder = InlineKeyboardBuilder()
            builder.add(InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit_theme_name_{theme.id}"))
            builder.add(InlineKeyboardButton(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"edit_theme_desc_{theme.id}"))
            builder.add(InlineKeyboardButton(text=f"üîÑ –°—Ç–∞—Ç—É—Å: {status}", callback_data=f"toggle_theme_{theme.id}"))
            builder.add(InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_theme_{theme.id}"))
            builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_themes"))
            builder.adjust(2)

            info = (
                f"üìö <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–º—ã</b>\n\n"
                f"–ù–∞–∑–≤–∞–Ω–∏–µ: {theme.name}\n"
                f"–û–ø–∏—Å–∞–Ω–∏–µ: {theme.desc or '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}\n"
                f"–°—Ç–∞—Ç—É—Å: {status}"
            )

            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if edit_message_id and edit_chat_id:
                try:
                    await message.bot.edit_message_text(
                        chat_id=edit_chat_id,
                        message_id=edit_message_id,
                        text=info,
                        reply_markup=builder.as_markup()
                    )
                except Exception as e:
                    # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
                    await message.answer(info, reply_markup=builder.as_markup())
        else:
            await message.answer("‚ùå –¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            await state.clear()
    else:
        # –≠—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–µ–º—ã
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.delete()

        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ state
        create_message_id = data.get("create_message_id")
        create_chat_id = data.get("create_chat_id")

        await state.update_data(name=new_name)

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if create_message_id and create_chat_id:
            try:
                await message.bot.edit_message_text(
                    chat_id=create_chat_id,
                    message_id=create_message_id,
                    text="üìù <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–µ–º—ã</b>\n\n"
                         "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–º—ã:",
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                        [InlineKeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_theme_description")],
                        [InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data="admin_themes")]
                    ])
                )
            except:
                await message.answer(
                    "üìù <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–µ–º—ã</b>\n\n"
                    "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–º—ã:",
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                        [InlineKeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_theme_description")],
                        [InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data="admin_themes")]
                    ])
                )
        await state.set_state(ThemeStates.description)


@router.callback_query(F.data.startswith("edit_theme_desc_"))
@admin_required
async def edit_theme_desc_start(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–µ–º—ã"""
    theme_id = int(callback.data.split("_")[3])
    theme = await get_theme_by_id(theme_id)

    if not theme:
        await callback.answer("‚ùå –¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return

    await state.update_data(
        theme_id=theme_id,
        editing_description=True,
        edit_message_id=callback.message.message_id,
        edit_chat_id=callback.message.chat.id
    )

    await callback.message.edit_text(
        f"üìù <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–µ–º—ã</b>\n\n"
        f"–¢–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {theme.desc or '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}\n\n"
        f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–º—ã:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data="skip_theme_description")],
            [InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data=f"edit_theme_{theme_id}")]
        ])
    )
    await state.set_state(ThemeStates.description)
    await callback.answer()


@router.callback_query(F.data == "skip_theme_description")
@admin_required
async def skip_theme_description(callback: CallbackQuery, state: FSMContext):
    """–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–º—ã"""
    data = await state.get_data()
    theme_id = data.get("theme_id")
    editing_description = data.get("editing_description", False)

    if theme_id and editing_description:
        # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - —É–¥–∞–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
        theme = await get_theme_by_id(theme_id)
        if theme:
            theme.desc = ""
            await update_theme(theme)

            # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–º—É –∏–∑ –ë–î –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö
            theme = await get_theme_by_id(theme_id)

            # –§–æ—Ä–º–∏—Ä—É–µ–º –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–∫–∞–∫ –≤ edit_theme_menu)
            status = "‚úÖ –ê–∫—Ç–∏–≤–Ω–∞" if theme.is_active else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"

            builder = InlineKeyboardBuilder()
            builder.add(InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit_theme_name_{theme.id}"))
            builder.add(InlineKeyboardButton(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"edit_theme_desc_{theme.id}"))
            builder.add(InlineKeyboardButton(text=f"üîÑ –°—Ç–∞—Ç—É—Å: {status}", callback_data=f"toggle_theme_{theme.id}"))
            builder.add(InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_theme_{theme.id}"))
            builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_themes"))
            builder.adjust(2)

            info = (
                f"üìö <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–º—ã</b>\n\n"
                f"–ù–∞–∑–≤–∞–Ω–∏–µ: {theme.name}\n"
                f"–û–ø–∏—Å–∞–Ω–∏–µ: {theme.desc or '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}\n"
                f"–°—Ç–∞—Ç—É—Å: {status}"
            )

            await callback.message.edit_text(info, reply_markup=builder.as_markup())
            await state.clear()
        else:
            await callback.answer("‚ùå –¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", show_alert=True)
            await state.clear()
    else:
        # –≠—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–µ–º—ã - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
        name = data.get("name")

        # –°–æ–∑–¥–∞—ë–º —Ç–µ–º—É
        theme = await create_theme(
            name=name,
            desc="",
            is_active=True
        )

        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ state
        create_message_id = data.get("create_message_id")
        create_chat_id = data.get("create_chat_id")

        # –û—á–∏—â–∞–µ–º state
        await state.clear()

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ —Ç–µ–º
        themes = await get_all_themes()

        # –°—Ç—Ä–æ–∏–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ (–∫–∞–∫ –≤ admin_themes)
        builder = InlineKeyboardBuilder()
        for theme_item in themes:
            status = "‚úÖ" if theme_item.is_active else "‚ùå"
            builder.add(InlineKeyboardButton(
                text=f"{status} {theme_item.name}",
                callback_data=f"edit_theme_{theme_item.id}"
            ))

        builder.add(InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–º—É", callback_data="add_theme"))
        builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_panel"))
        builder.adjust(1)

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if create_message_id and create_chat_id:
            try:
                await callback.bot.edit_message_text(
                    chat_id=create_chat_id,
                    message_id=create_message_id,
                    text="üìö <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–∞–º–∏</b>\n\n"
                         "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é:",
                    reply_markup=builder.as_markup()
                )
            except:
                await callback.message.edit_text(
                    "üìö <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–∞–º–∏</b>\n\n"
                    "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é:",
                    reply_markup=builder.as_markup()
                )
    await callback.answer()


@router.message(ThemeStates.description)
@admin_required
async def edit_theme_desc_save(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–º—ã"""
    data = await state.get_data()
    theme_id = data.get("theme_id")
    editing_description = data.get("editing_description", False)

    if theme_id and editing_description:
        # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ç–µ–º—ã
        theme = await get_theme_by_id(theme_id)
        if theme:
            theme.desc = message.text
            await update_theme(theme)

            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                await message.delete()
            except:
                pass

            # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ state
            edit_message_id = data.get("edit_message_id")
            edit_chat_id = data.get("edit_chat_id")

            # –û—á–∏—â–∞–µ–º state
            await state.clear()

            # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–º—É –∏–∑ –ë–î –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö
            theme = await get_theme_by_id(theme_id)

            # –§–æ—Ä–º–∏—Ä—É–µ–º –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–∫–∞–∫ –≤ edit_theme_menu)
            status = "‚úÖ –ê–∫—Ç–∏–≤–Ω–∞" if theme.is_active else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"

            builder = InlineKeyboardBuilder()
            builder.add(InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit_theme_name_{theme.id}"))
            builder.add(InlineKeyboardButton(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"edit_theme_desc_{theme.id}"))
            builder.add(InlineKeyboardButton(text=f"üîÑ –°—Ç–∞—Ç—É—Å: {status}", callback_data=f"toggle_theme_{theme.id}"))
            builder.add(InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_theme_{theme.id}"))
            builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_themes"))
            builder.adjust(2)

            info = (
                f"üìö <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–º—ã</b>\n\n"
                f"–ù–∞–∑–≤–∞–Ω–∏–µ: {theme.name}\n"
                f"–û–ø–∏—Å–∞–Ω–∏–µ: {theme.desc or '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}\n"
                f"–°—Ç–∞—Ç—É—Å: {status}"
            )

            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if edit_message_id and edit_chat_id:
                try:
                    await message.bot.edit_message_text(
                        chat_id=edit_chat_id,
                        message_id=edit_message_id,
                        text=info,
                        reply_markup=builder.as_markup()
                    )
                except Exception as e:
                    # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
                    await message.answer(info, reply_markup=builder.as_markup())
        else:
            await message.answer("‚ùå –¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            await state.clear()
    else:
        # –≠—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–µ–º—ã
        name = data.get("name")

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.delete()

        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ state
        create_message_id = data.get("create_message_id")
        create_chat_id = data.get("create_chat_id")

        # –°–æ–∑–¥–∞—ë–º —Ç–µ–º—É
        theme = await create_theme(
            name=name,
            desc=message.text,
            is_active=True
        )

        # –û—á–∏—â–∞–µ–º state
        await state.clear()

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ —Ç–µ–º
        themes = await get_all_themes()

        # –°—Ç—Ä–æ–∏–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ (–∫–∞–∫ –≤ admin_themes)
        builder = InlineKeyboardBuilder()
        for theme_item in themes:
            status = "‚úÖ" if theme_item.is_active else "‚ùå"
            builder.add(InlineKeyboardButton(
                text=f"{status} {theme_item.name}",
                callback_data=f"edit_theme_{theme_item.id}"
            ))

        builder.add(InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–º—É", callback_data="add_theme"))
        builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_panel"))
        builder.adjust(1)

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if create_message_id and create_chat_id:
            try:
                await message.bot.edit_message_text(
                    chat_id=create_chat_id,
                    message_id=create_message_id,
                    text="üìö <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–∞–º–∏</b>\n\n"
                         "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é:",
                    reply_markup=builder.as_markup()
                )
            except:
                await message.answer(
                    "üìö <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–∞–º–∏</b>\n\n"
                    "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é:",
                    reply_markup=builder.as_markup()
                )


@router.callback_query(F.data.startswith("delete_theme_"))
@admin_required
async def delete_theme_prompt(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ–º—ã"""
    theme_id = int(callback.data.split("_")[2])
    theme = await get_theme_by_id(theme_id)

    if not theme:
        await callback.answer("‚ùå –¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return

    # –ü–æ–¥—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    books_count = len(theme.books) if theme.books else 0
    lessons_count = sum(len(book.lessons) if book.lessons else 0 for book in theme.books) if theme.books else 0

    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"confirm_delete_theme_{theme.id}"))
    builder.add(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"edit_theme_{theme.id}"))

    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    warning_text = f"‚ö†Ô∏è <b>–£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–º—ã</b>\n\n"
    warning_text += f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç–µ–º—É ¬´{theme.name}¬ª?\n\n"

    if books_count > 0:
        warning_text += f"‚ÑπÔ∏è <b>–£ —ç—Ç–æ–π —Ç–µ–º—ã –µ—Å—Ç—å {books_count} –∫–Ω–∏–≥(–∏)</b>\n"
        warning_text += f"–ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–µ–º—ã –∫–Ω–∏–≥–∏ –ù–ï —É–¥–∞–ª—è—Ç—Å—è, –Ω–æ –ø–µ—Ä–µ–π–¥—É—Ç –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é \"–ë–µ–∑ —Ç–µ–º—ã\".\n"
        if lessons_count > 0:
            warning_text += f"(–≤ –Ω–∏—Ö {lessons_count} —É—Ä–æ–∫–æ–≤)\n"
        warning_text += "\n"

    warning_text += "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!"

    await callback.message.edit_text(
        warning_text,
        reply_markup=builder.as_markup()
    )
    await callback.answer()


@router.callback_query(F.data.startswith("confirm_delete_theme_"))
@admin_required
async def confirm_delete_theme(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–º—ã"""
    theme_id = int(callback.data.split("_")[3])
    theme = await get_theme_by_id(theme_id)

    if not theme:
        await callback.answer("‚ùå –¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return

    await delete_theme(theme_id)

    await callback.message.edit_text(
        f"‚úÖ –¢–µ–º–∞ ¬´{theme.name}¬ª –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="üîô –ö —Å–ø–∏—Å–∫—É —Ç–µ–º", callback_data="admin_themes")]])
    )
    await callback.answer()


@router.callback_query(F.data == "admin_panel")
@admin_required
async def back_to_admin_panel(callback: CallbackQuery):
    """–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å"""
    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(text="üìö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–∞–º–∏", callback_data="admin_themes"))
    builder.add(InlineKeyboardButton(text="‚úçÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞–º–∏", callback_data="admin_authors"))
    builder.add(InlineKeyboardButton(text="üìñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∞–º–∏", callback_data="admin_books"))
    builder.add(InlineKeyboardButton(text="üë§ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏", callback_data="admin_teachers"))
    builder.add(InlineKeyboardButton(text="üìÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–∏—è–º–∏", callback_data="admin_series"))
    builder.add(InlineKeyboardButton(text="üéß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Ä–æ–∫–∞–º–∏", callback_data="admin_lessons"))
    builder.add(InlineKeyboardButton(text="üéì –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞–º–∏", callback_data="admin_tests"))
    builder.add(InlineKeyboardButton(text="üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", callback_data="admin_users"))
    builder.add(InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats"))
    builder.add(InlineKeyboardButton(text="‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞", callback_data="admin_help"))
    builder.add(InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"))
    builder.adjust(1)

    await callback.message.edit_text(
        "üõ†Ô∏è <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
        reply_markup=builder.as_markup()
    )
    await callback.answer()
